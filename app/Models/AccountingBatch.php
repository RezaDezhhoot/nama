<?php

namespace App\Models;

use App\Enums\UnitSubType;
use App\Enums\UnitType;
use App\Traits\SimpleSearchable;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Database\Eloquent\SoftDeletes;
use Ramsey\Uuid\Uuid;

class AccountingBatch extends Model
{
    use SoftDeletes , SimpleSearchable;

    public array $searchAbleColumns = ['batch'];

    public $incrementing = false;
    protected $keyType = "string";

    protected $guarded = ['id'];

    protected $casts = [
        'unit_type' => UnitType::class,
        'unit_sub_type' => UnitSubType::class,
        'plans' => "array"
    ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::creating(function (Model $model) {
            if (! $model->getAttributeValue($model->getKeyName())) {
                $model->setAttribute($model->getKeyName(),Uuid::uuid4());
            }
        });
    }

    public function records(): HasMany
    {
        return $this->hasMany(AccountingRecord::class,'accounting_batch_id');
    }

    public function getKey()
    {
        return parent::getKey(); // TODO: Change the autogenerated stub
    }
}
